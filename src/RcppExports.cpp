// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Rcpp_aux
List Rcpp_aux(const int& ref_n, const int& n, NumericMatrix X, NumericMatrix K, const bool& given_kern, const Function& CrossKern, const int& p, NumericVector s2_i, const double& alpha, const bool& use_tested_inlier, const Function& rnormmat);
RcppExport SEXP _RaPKod_Rcpp_aux(SEXP ref_nSEXP, SEXP nSEXP, SEXP XSEXP, SEXP KSEXP, SEXP given_kernSEXP, SEXP CrossKernSEXP, SEXP pSEXP, SEXP s2_iSEXP, SEXP alphaSEXP, SEXP use_tested_inlierSEXP, SEXP rnormmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type ref_n(ref_nSEXP);
    Rcpp::traits::input_parameter< const int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type K(KSEXP);
    Rcpp::traits::input_parameter< const bool& >::type given_kern(given_kernSEXP);
    Rcpp::traits::input_parameter< const Function& >::type CrossKern(CrossKernSEXP);
    Rcpp::traits::input_parameter< const int& >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s2_i(s2_iSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const bool& >::type use_tested_inlier(use_tested_inlierSEXP);
    Rcpp::traits::input_parameter< const Function& >::type rnormmat(rnormmatSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_aux(ref_n, n, X, K, given_kern, CrossKern, p, s2_i, alpha, use_tested_inlier, rnormmat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RaPKod_Rcpp_aux", (DL_FUNC) &_RaPKod_Rcpp_aux, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_RaPKod(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
